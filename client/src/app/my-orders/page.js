"use client";

import { useEffect, useState } from "react";

export default function MyOrdersPage() {
    const [orders, setOrders] = useState([]);

    useEffect(() => {
        fetchOrders();
    }, []);

    const fetchOrders = async () => {
        const email = localStorage.getItem("email"); // ‚úÖ l·∫•y email t·ª´ localStorage
        if (!email) return;

        try {
            const res = await fetch(`http://localhost:5000/api/orders/${email}`);
            const data = await res.json();
            setOrders(data);
        } catch (err) {
            console.error(err);
        }
    };

    // ‚úÖ H√†m h·ªßy ƒë∆°n h√†ng
    const handleCancel = async (id) => {
        if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën h·ªßy ƒë∆°n h√†ng n√†y kh√¥ng?")) return;

        try {
            await fetch(`http://localhost:5000/api/orders/${id}/cancel`, {
                method: "PUT",
            });
            alert("ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c h·ªßy");
            fetchOrders(); // reload l·∫°i danh s√°ch sau khi h·ªßy
        } catch (err) {
            console.error(err);
            alert("Kh√¥ng th·ªÉ h·ªßy ƒë∆°n h√†ng");
        }
    };

    return (
        <div className="min-h-screen bg-gray-50 p-8">
            <div className="max-w-4xl mx-auto">
                <h1 className="text-2xl font-bold mb-6">üìë ƒê∆°n h√†ng c·ªßa t√¥i</h1>

                {orders.length === 0 && (
                    <p>B·∫°n ch∆∞a c√≥ ƒë∆°n h√†ng n√†o.</p>
                )}

                {orders.map(order => (
                    <div key={order._id} className="bg-white p-4 rounded-xl shadow mb-4">
                        <p><strong>M√£ ƒë∆°n:</strong> {order._id}</p>
                        <p><strong>Ng√†y ƒë·∫∑t:</strong> {new Date(order.createdAt).toLocaleString()}</p>
                        <p><strong>Thanh to√°n:</strong> {order.paymentMethod}</p>
                        <p>
                            <strong>Tr·∫°ng th√°i:</strong>{" "}
                            {order.status === "ch·ªù x√°c nh·∫≠n" && (
                                <span className="text-yellow-600">Ch·ªù x√°c nh·∫≠n</span>
                            )}
                            {order.status === "ƒë√£ ho√†n th√†nh" && (
                                <span className="text-green-600">ƒê√£ ho√†n th√†nh</span>
                            )}
                            {order.status === "ƒê√£ h·ªßy" && (
                                <span className="text-red-600">ƒê√£ h·ªßy</span>
                            )}
                        </p>

                        <ul className="mt-2 list-disc ml-6">
                            {order.items.map(item => (
                                <li key={item._id}>
                                    {item.productId?.name || "S·∫£n ph·∫©m"} - SL: {item.quantity}
                                </li>
                            ))}
                        </ul>

                        {/* ‚úÖ N√∫t h·ªßy ƒë∆°n ch·ªâ hi·ªán n·∫øu ƒë∆°n ƒëang ch·ªù x√°c nh·∫≠n */}
                        {order.status === "ch·ªù x√°c nh·∫≠n" && (
                            <button
                                onClick={() => handleCancel(order._id)}
                                className="mt-3 bg-red-500 text-white px-3 py-2 rounded hover:bg-red-600"
                            >
                                H·ªßy ƒë∆°n h√†ng
                            </button>
                        )}
                    </div>
                ))}
            </div>
        </div>
    );
}